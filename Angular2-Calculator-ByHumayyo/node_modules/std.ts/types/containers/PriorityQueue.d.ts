/**
 * @author Hector J. Vasquez <ipi.vasquez@gmail.com>
 *
 * @licence
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Queue } from './Queue';
/**
 * Priority queues are a type of queues which prioritizes some elements
 * above other. When an element is inserted, the ele
 * Queues are a type of container adaptor, specifically designed to
 * operate
 * in a FIFO context, where elements are inserted from one end and extracted
 * from another end of the container.
 */
export declare class PriorityQueue<T> extends Queue<T> {
    private compareFunction;
    /**
     * Constructs queue.
     */
    constructor(compareFunction?: (a: T, b: T) => number);
    /**
     * Inserts an element to the queue.
     * @param e The element to insert to the queue.
     */
    push(e: T): void;
    info(): T[];
}
